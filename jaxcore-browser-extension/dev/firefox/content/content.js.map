{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/content/content.js"],"names":["bgPort","disconnectExtension","disconnect","undefined","connectExtension","console","log","chrome","runtime","connect","name","onDisconnect","addListener","window","postMessage","connectedExtension","onMessage","msg","spinStore","alert","spinCreated","id","spinUpdate","spinDestroyed","addEventListener","event","source","isTrusted","data","type","text","global","HELLO","DUDE"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAG,IAAb;;AAEA,SAASC,mBAAT,GAA+B;AAC9B,MAAID,MAAJ,EAAY;AACXA,UAAM,CAACE,UAAP;AACAF,UAAM,GAAGG,SAAT;AACA;AACD;;AAED,SAASC,gBAAT,GAA4B;AAC3BC,SAAO,CAACC,GAAR,CAAY,gDAAZ;AAEAN,QAAM,GAAGO,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuB;AAC/BC,QAAI,EAAC;AAD0B,GAAvB,CAAT;AAIAV,QAAM,CAACW,YAAP,CAAoBC,WAApB,CAAgC,YAAW;AAC1CP,WAAO,CAACC,GAAR,CAAY,2BAAZ;AACAO,UAAM,CAACC,WAAP,CAAmB;AAClBC,wBAAkB,EAAE;AADF,KAAnB,EAEG,GAFH;AAGA,GALD;AAOAf,QAAM,CAACgB,SAAP,CAAiBJ,WAAjB,CAA6B,UAASK,GAAT,EAAc;AAC1CZ,WAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCW,GAAxC;;AAEA,QAAIA,GAAG,CAACF,kBAAR,EAA4B;AAE3BF,YAAM,CAACC,WAAP,CAAmB;AAClB;AACAC,0BAAkB,EAAE,CAAC,CAACE,GAAG,CAACF;AAFR,OAAnB,EAGG,GAHH;AAIA;;AAED,QAAIE,GAAG,CAACC,SAAR,EAAmB;AAClBC,WAAK,CAAC,wBAAD,CAAL,CADkB,CAElB;;AACAN,YAAM,CAACC,WAAP,CAAmBG,GAAnB,EAAwB,GAAxB;AACA;;AACD,QAAIA,GAAG,CAACG,WAAR,EAAqB;AACpBf,aAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BW,GAAG,CAACI,EAAhC,EAAoCJ,GAAG,CAACG,WAAxC;AACAP,YAAM,CAACC,WAAP,CAAmBG,GAAnB,EAAwB,GAAxB;AACA;;AACD,QAAIA,GAAG,CAACK,UAAR,EAAoB;AACnBjB,aAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BW,GAAG,CAACI,EAA/B,EAAmCJ,GAAG,CAACK,UAAvC;AACAT,YAAM,CAACC,WAAP,CAAmBG,GAAnB,EAAwB,GAAxB;AACA;;AACD,QAAIA,GAAG,CAACM,aAAR,EAAuB;AACtBlB,aAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BW,GAAG,CAACI,EAAlC,EAAsCJ,GAAG,CAACM,aAA1C;AACAV,YAAM,CAACC,WAAP,CAAmBG,GAAnB,EAAwB,GAAxB;AACA;AACD,GA5BD;AA8BAjB,QAAM,CAACc,WAAP,CAAmB;AAClBV,oBAAgB,EAAE;AADA,GAAnB;AAIA;;AAEDS,MAAM,CAACW,gBAAP,CAAwB,SAAxB,EAAmC,UAASC,KAAT,EAAgB;AAClD;AACA,MAAIA,KAAK,CAACC,MAAN,IAAgBb,MAAhB,IAA0B,CAACY,KAAK,CAACE,SAArC,EAAgD;AAC/CtB,WAAO,CAACC,GAAR,CAAY,QAAZ;AACA;AACA;;AAED,MAAImB,KAAK,CAACG,IAAN,CAAW3B,mBAAf,EAAoC;AACnCI,WAAO,CAACC,GAAR,CAAY,8BAAZ;AACAL,uBAAmB;AACnB,GAHD,MAIK,IAAIwB,KAAK,CAACG,IAAN,CAAWxB,gBAAf,EAAiC;AACrCC,WAAO,CAACC,GAAR,CAAY,8BAAZ;AACAF,oBAAgB,GAFqB,CAIrC;AACA;AACA;AACA;AACA;AACA;AAEA,GAXI,MAYA,IAAIqB,KAAK,CAACG,IAAN,CAAWC,IAAX,IAAoBJ,KAAK,CAACG,IAAN,CAAWC,IAAX,IAAmB,WAA3C,EAAyD;AAC7DxB,WAAO,CAACC,GAAR,CAAY,sCAAsCmB,KAAK,CAACG,IAAN,CAAWE,IAA7D;AACA;AACA;AACD,CA3BD;AA6BAC,MAAM,CAACC,KAAP,GAAe,IAAf;AACA3B,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoByB,MAAM,CAACE,IAA3B,E","file":"content/content.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/content/content.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// import ext from '../utils/ext';\n//\n// ext.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n// \tif (request.action === 'change-color') {\n// \t\tdocument.body.style.background = request.data.color;\n// \t}\n// \telse {\n//\n// \t\t// if (request.background === true) {\n// \t\t// \tchrome.runtime.sendMessage({\n// \t\t// \t\tcontentScriptMessage: \"hello\"\n// \t\t// \t}, function(response) {\n// \t\t// \t\tconsole.log('response from background?', response);\n// \t\t// \t});\n// \t\t// }\n//\n// \t\tconsole.log('CONTENT received', sender.tab ?\n// \t\t\t\"from a content script:\" + sender.tab.url :\n// \t\t\t\"from the extension\");\n// \t\tconsole.log('CONTENT request', request, 'sender', sender, 'response', sendResponse);\n//\n// \t\t// if (request.greeting == \"hello\")\n// \t\t// \tsendResponse({farewell: \"goodbye\"});\n//\n// \t\t//console.log('onMessage', request);\n//\n// \t\tsendResponse({contentScriptResponse: \"content says hello\"});\n//\n// \t}\n// });\n\n// chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n// \tconsole.log('CONTENT received', sender.tab ?\n// \t\t\"from a content script:\" + sender.tab.url :\n// \t\t\"from the extension\");\n//\n// \t// if (request.greeting == \"hello\")\n// \t// \tsendResponse({farewell: \"goodbye\"});\n//\n// \tconsole.log('onMessage', request);\n//\n// \tsendResponse({contentScriptResponse: \"content says hello\"});\n// });\n\nvar bgPort = null;\n\nfunction disconnectExtension() {\n\tif (bgPort) {\n\t\tbgPort.disconnect();\n\t\tbgPort = undefined;\n\t}\n}\n\nfunction connectExtension() {\n\tconsole.log('content sending connectExtension to background');\n\t\n\tbgPort = chrome.runtime.connect({\n\t\tname:\"port-from-cs\"\n\t});\n\t\n\tbgPort.onDisconnect.addListener(function() {\n\t\tconsole.log('console port onDisconnect');\n\t\twindow.postMessage({\n\t\t\tconnectedExtension: false,\n\t\t}, \"*\");\n\t});\n\t\n\tbgPort.onMessage.addListener(function(msg) {\n\t\tconsole.log(\"content received from bg\", msg);\n\t\t\n\t\tif (msg.connectedExtension) {\n\t\t\t\n\t\t\twindow.postMessage({\n\t\t\t\t// isSocketConnected: !!msg.isSocketConnected,\n\t\t\t\tconnectedExtension: !!msg.connectedExtension,\n\t\t\t}, \"*\");\n\t\t}\n\t\t\n\t\tif (msg.spinStore) {\n\t\t\talert('got spin store content');\n\t\t\t//debugger;\n\t\t\twindow.postMessage(msg, \"*\");\n\t\t}\n\t\tif (msg.spinCreated) {\n\t\t\tconsole.log('spin-created', msg.id, msg.spinCreated);\n\t\t\twindow.postMessage(msg, \"*\");\n\t\t}\n\t\tif (msg.spinUpdate) {\n\t\t\tconsole.log('spin-update', msg.id, msg.spinUpdate);\n\t\t\twindow.postMessage(msg, \"*\");\n\t\t}\n\t\tif (msg.spinDestroyed) {\n\t\t\tconsole.log('spin-destroyed', msg.id, msg.spinDestroyed);\n\t\t\twindow.postMessage(msg, \"*\");\n\t\t}\n\t});\n\t\n\tbgPort.postMessage({\n\t\tconnectExtension: true\n\t});\n\t\n}\n\nwindow.addEventListener(\"message\", function(event) {\n\t// We only accept messages from ourselves\n\tif (event.source != window || !event.isTrusted) {\n\t\tconsole.log('NOOOOO');\n\t\treturn;\n\t}\n\t\n\tif (event.data.disconnectExtension) {\n\t\tconsole.log('content got connectExtension');\n\t\tdisconnectExtension();\n\t}\n\telse if (event.data.connectExtension) {\n\t\tconsole.log('content got connectExtension');\n\t\tconnectExtension();\n\t\t\n\t\t//alert('connectExtension1');\n\t\t// chrome.runtime.postMessage({\n\t\t// \tconnectExtension: true\n\t\t// }, function(response) {\n\t\t// \tconsole.log('extension connected?', response);\n\t\t// });\n\t\t\n\t}\n\telse if (event.data.type && (event.data.type == \"FROM_PAGE\")) {\n\t\tconsole.log(\"Content script received message: \" + event.data.text);\n\t\tdebugger;\n\t}\n});\n\nglobal.HELLO = 1234;\nconsole.log('DUDE', global.DUDE);\n\n"],"sourceRoot":""}