{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/content/content.js"],"names":["bgPort","isActiveTab","disconnectExtension","console","log","postMessage","socketDisconnected","disconnect","undefined","msg","data","message","protocol","window","connectExtension","chrome","runtime","connect","name","onDisconnect","addListener","connectedExtension","onMessage","spin","addEventListener","event","source","isTrusted","_jaxcore_client"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAG,IAAb;AACA,IAAIC,WAAW,GAAG,IAAlB;;AAIA,SAASC,mBAAT,GAA+B;AAC9B,MAAIF,MAAJ,EAAY;AAEXG,WAAO,CAACC,GAAR,CAAY,iCAAZ;AACAC,eAAW,CAAC;AACXC,wBAAkB,EAAE;AADT,KAAD,CAAX;AAIAN,UAAM,CAACO,UAAP;AACAP,UAAM,GAAGQ,SAAT;AACA;AACD;;AAED,SAASH,WAAT,CAAqBI,GAArB,EAA0B;AACzB,MAAIC,IAAI,GAAG;AACV,wBAAoB;AACnBC,aAAO,EAAEF,GADU;AAEnBG,cAAQ,EAAE;AAFS;AADV,GAAX;AAMAT,SAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BM,IAA5B;AACAG,QAAM,CAACR,WAAP,CAAmBK,IAAnB,EAAyB,GAAzB,EARyB,CASxB;AACD;;AAED,SAASI,gBAAT,GAA4B;AAC3BX,SAAO,CAACC,GAAR,CAAY,gDAAZ;AAEAJ,QAAM,GAAGe,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuB;AAC/BC,QAAI,EAAC;AAD0B,GAAvB,CAAT;AAIAlB,QAAM,CAACmB,YAAP,CAAoBC,WAApB,CAAgC,YAAW;AAC1CjB,WAAO,CAACC,GAAR,CAAY,2BAAZ;AAEAC,eAAW,CAAC;AACXgB,wBAAkB,EAAE;AADT,KAAD,CAAX;AAGA,GAND;AAQArB,QAAM,CAACsB,SAAP,CAAiBF,WAAjB,CAA6B,UAASX,GAAT,EAAc;AAC1CN,WAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCK,GAAxC;;AAIA,QAAIA,GAAG,CAACY,kBAAR,EAA4B;AAE3BhB,iBAAW,CAAC;AACX;AACAgB,0BAAkB,EAAE,CAAC,CAACZ,GAAG,CAACY;AAFf,OAAD,CAAX;AAIA;;AAED,QAAI,iBAAiBZ,GAArB,EAA0B;AAAE;AAC3B,UAAIA,GAAG,CAACR,WAAJ,KAAoBA,WAAxB,EAAqC;AACpCA,mBAAW,GAAGQ,GAAG,CAACR,WAAlB;AACAE,eAAO,CAACC,GAAR,CAAY,aAAZ;AACAC,mBAAW,CAAC;AACXJ,qBAAW,EAAXA;AADW,SAAD,CAAX;AAGA;AACD;;AAED,QAAIQ,GAAG,CAACc,IAAR,EAAc;AACbpB,aAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCK,GAAtC,EADa,CAGb;;AACAJ,iBAAW,CAACI,GAAD,CAAX;AACA;AACD,GA7BD;AA+BAT,QAAM,CAACK,WAAP,CAAmB;AAClBS,oBAAgB,EAAE;AADA,GAAnB;AAIA;;AAEDD,MAAM,CAACW,gBAAP,CAAwB,SAAxB,EAAmC,UAASC,KAAT,EAAgB;AAClDtB,SAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCqB,KAAK,CAACf,IAAxC,EADkD,CAGlD;;AACA,MAAIe,KAAK,CAACC,MAAN,IAAgBb,MAAhB,IAA0B,CAACY,KAAK,CAACE,SAArC,EAAgD;AAC/CxB,WAAO,CAACC,GAAR,CAAY,YAAZ;AACA;AACA;;AAED,MAAIqB,KAAK,CAACf,IAAN,CAAWkB,eAAf,EAAgC;AAC/B,QAAInB,GAAG,GAAGgB,KAAK,CAACf,IAAN,CAAWkB,eAAX,CAA2BjB,OAArC,CAD+B,CAG/B;AACA;AACA;AACA;;AACA,QAAIF,GAAG,CAACP,mBAAR,EAA6B;AAC5BC,aAAO,CAACC,GAAR,CAAY,iCAAZ;AACAF,yBAAmB;AACnB,KAHD,MAIK,IAAIO,GAAG,CAACK,gBAAR,EAA0B;AAC9BX,aAAO,CAACC,GAAR,CAAY,8BAAZ;AACAU,sBAAgB;AAChB,KAHI,CAIL;AACA;AACA;AACA;AAPK,SAQA;AACJX,eAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCK,GAArC;AACA;AACD,GAtBD,MAuBK;AACJN,WAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCqB,KAAK,CAACf,IAAzC;AACA;AACD,CAnCD,E","file":"content/content.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/content/content.js\");\n","// import ext from '../utils/ext';\n//\n// ext.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n// \tif (request.action === 'change-color') {\n// \t\tdocument.body.style.background = request.data.color;\n// \t}\n// \telse {\n//\n// \t\t// if (request.background === true) {\n// \t\t// \tchrome.runtime.sendMessage({\n// \t\t// \t\tcontentScriptMessage: \"hello\"\n// \t\t// \t}, function(response) {\n// \t\t// \t\tconsole.log('response from background?', response);\n// \t\t// \t});\n// \t\t// }\n//\n// \t\tconsole.log('CONTENT received', sender.tab ?\n// \t\t\t\"from a content script:\" + sender.tab.url :\n// \t\t\t\"from the extension\");\n// \t\tconsole.log('CONTENT request', request, 'sender', sender, 'response', sendResponse);\n//\n// \t\t// if (request.greeting == \"hello\")\n// \t\t// \tsendResponse({farewell: \"goodbye\"});\n//\n// \t\t//console.log('onMessage', request);\n//\n// \t\tsendResponse({contentScriptResponse: \"content says hello\"});\n//\n// \t}\n// });\n\n// chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n// \tconsole.log('CONTENT received', sender.tab ?\n// \t\t\"from a content script:\" + sender.tab.url :\n// \t\t\"from the extension\");\n//\n// \t// if (request.greeting == \"hello\")\n// \t// \tsendResponse({farewell: \"goodbye\"});\n//\n// \tconsole.log('onMessage', request);\n//\n// \tsendResponse({contentScriptResponse: \"content says hello\"});\n// });\n\nlet bgPort = null;\nlet isActiveTab = true;\n\n\n\nfunction disconnectExtension() {\n\tif (bgPort) {\n\t\t\n\t\tconsole.log('content post socketDisconnected')\n\t\tpostMessage({\n\t\t\tsocketDisconnected: true\n\t\t});\n\t\t\n\t\tbgPort.disconnect();\n\t\tbgPort = undefined;\n\t}\n}\n\nfunction postMessage(msg) {\n\tvar data = {\n\t\t'_jaxcore_content': {\n\t\t\tmessage: msg,\n\t\t\tprotocol: 1\n\t\t}\n\t};\n\tconsole.log('content post', data);\n\twindow.postMessage(data, '*');\n\t\t//window.document.location.protocol+window.document.location.host);\n}\n\nfunction connectExtension() {\n\tconsole.log('content sending connectExtension to background');\n\t\n\tbgPort = chrome.runtime.connect({\n\t\tname:\"port-from-cs\"\n\t});\n\t\n\tbgPort.onDisconnect.addListener(function() {\n\t\tconsole.log('console port onDisconnect');\n\t\t\n\t\tpostMessage({\n\t\t\tconnectedExtension: false,\n\t\t});\n\t});\n\t\n\tbgPort.onMessage.addListener(function(msg) {\n\t\tconsole.log(\"content received from bg\", msg);\n\t\t\n\t\t\n\t\t\n\t\tif (msg.connectedExtension) {\n\t\t\t\n\t\t\tpostMessage({\n\t\t\t\t// isSocketConnected: !!msg.isSocketConnected,\n\t\t\t\tconnectedExtension: !!msg.connectedExtension,\n\t\t\t});\n\t\t}\n\t\t\n\t\tif ('isActiveTab' in msg) { // activeTab is sent along with .spinStore\n\t\t\tif (msg.isActiveTab !== isActiveTab) {\n\t\t\t\tisActiveTab = msg.isActiveTab;\n\t\t\t\tconsole.log('isActiveTab');\n\t\t\t\tpostMessage({\n\t\t\t\t\tisActiveTab\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (msg.spin) {\n\t\t\tconsole.log('got spin store content', msg);\n\t\t\t\n\t\t\t//debugger;\n\t\t\tpostMessage(msg);\n\t\t}\n\t});\n\t\n\tbgPort.postMessage({\n\t\tconnectExtension: true\n\t});\n\t\n}\n\nwindow.addEventListener(\"message\", function(event) {\n\tconsole.log('content on message', event.data);\n\t\n\t// We only accept messages from ourselves\n\tif (event.source != window || !event.isTrusted) {\n\t\tconsole.log('!isTrusted');\n\t\treturn;\n\t}\n\t\n\tif (event.data._jaxcore_client) {\n\t\tvar msg = event.data._jaxcore_client.message;\n\t\t\n\t\t// if (msg.socketDisconnected) {\n\t\t// \tconsole.log('content got socketDisconnected');\n\t\t// \tdisconnectExtension();\n\t\t// }\n\t\tif (msg.disconnectExtension) {\n\t\t\tconsole.log('content got disconnectExtension');\n\t\t\tdisconnectExtension();\n\t\t}\n\t\telse if (msg.connectExtension) {\n\t\t\tconsole.log('content got connectExtension');\n\t\t\tconnectExtension();\n\t\t}\n\t\t// else if (event.data.type && (event.data.type == \"FROM_PAGE\")) {\n\t\t// \tconsole.log(\"Content script received message: \" + event.data.text);\n\t\t// \tdebugger;\n\t\t// }\n\t\telse {\n\t\t\tconsole.log('content unhandled msg', msg);\n\t\t}\n\t}\n\telse {\n\t\tconsole.log('not _jaxcore_client', event.data);\n\t}\n});\n\n"],"sourceRoot":""}